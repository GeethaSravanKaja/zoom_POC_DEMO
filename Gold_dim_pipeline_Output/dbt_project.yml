# DBT Project Configuration for Zoom Gold Layer Pipeline
# This file configures the DBT project for transforming Silver layer data into Gold layer dimension and fact tables

name: 'zoom_gold_pipeline'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'zoom_gold_pipeline'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Variables for the project
vars:
  # Source database and schema configurations
  source_database: 'ZOOM_DB'
  source_schema: 'SILVER'
  target_schema: 'GOLD'
  
  # Audit and error handling configurations
  enable_audit_logging: true
  enable_error_handling: true
  
  # Data quality configurations
  enable_data_quality_tests: true
  data_quality_threshold: 0.95
  
  # Processing configurations
  batch_size: 10000
  max_retry_attempts: 3

# Model configurations
models:
  zoom_gold_pipeline:
    # Global model configurations
    +materialized: table
    +on_schema_change: "fail"
    
    # Audit models configuration
    go_process_audit:
      +materialized: table
      +tags: ["audit", "core"]
      +pre_hook: ""
      +post_hook: ""
    
    # Dimension models configuration
    go_user_dim:
      +materialized: table
      +tags: ["dimension", "scd2"]
    
    go_license_dim:
      +materialized: table
      +tags: ["dimension", "scd2"]
    
    # Fact models configuration
    go_meeting_fact:
      +materialized: table
      +tags: ["fact", "meeting"]
    
    go_participant_fact:
      +materialized: table
      +tags: ["fact", "participant"]
    
    go_feature_usage_fact:
      +materialized: table
      +tags: ["fact", "feature"]
    
    go_webinar_fact:
      +materialized: table
      +tags: ["fact", "webinar"]
    
    go_support_ticket_fact:
      +materialized: table
      +tags: ["fact", "support"]
    
    go_billing_event_fact:
      +materialized: table
      +tags: ["fact", "billing"]
    
    # Error handling models configuration
    go_error_data:
      +materialized: table
      +tags: ["error", "monitoring"]

# Test configurations
tests:
  +store_failures: true
  +severity: 'warn'

# Snapshot configurations
snapshots:
  zoom_gold_pipeline:
    +target_schema: "{{ var('target_schema') }}_SNAPSHOTS"
    +strategy: timestamp
    +updated_at: updated_at

# Seed configurations
seeds:
  zoom_gold_pipeline:
    +schema: "{{ var('target_schema') }}_REFERENCE"

# Macro configurations
macros:
  zoom_gold_pipeline:
    +schema: "{{ var('target_schema') }}_MACROS"

# Documentation configurations
docs:
  generate: true
  
# Dispatch configurations for package compatibility
dispatch:
  - macro_namespace: dbt_utils
    search_order: ['zoom_gold_pipeline', 'dbt_utils']

# Query comment configuration
query-comment:
  comment: "Generated by DBT for Zoom Gold Pipeline - {{ invocation_id }}"
  append: true

# Quoting configurations for Snowflake
quoting:
  database: false
  schema: false
  identifier: false

# On-run-start and on-run-end hooks
on-run-start:
  - "{{ log('Starting Zoom Gold Pipeline execution...', info=True) }}"
  - "CREATE SCHEMA IF NOT EXISTS {{ var('target_schema') }}"

on-run-end:
  - "{{ log('Zoom Gold Pipeline execution completed successfully!', info=True) }}"
  - "GRANT SELECT ON ALL TABLES IN SCHEMA {{ var('target_schema') }} TO ROLE ANALYST_ROLE"

# Require DBT version
require-dbt-version: [">=1.0.0", "<2.0.0"]

# Flags
flags:
  send_anonymous_usage_stats: false
  use_colors: true
  partial_parse: true
  static_parser: true