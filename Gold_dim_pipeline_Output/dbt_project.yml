# DBT Project Configuration for Zoom Gold Dimension Pipeline
# Author: AAVA Data Engineering Team
# Description: Production-ready DBT project for Silver to Gold layer transformation
# Version: 1.0

name: 'zoom_gold_dimension_pipeline'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'zoom_gold_dimension_pipeline'

# These configurations specify where dbt should look for different types of files.
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"
clean-targets:
  - "target"
  - "dbt_packages"

# Model configurations
models:
  zoom_gold_dimension_pipeline:
    # Configuration for all models in this project
    +materialized: table
    +on_schema_change: "fail"
    
    # Staging models configuration
    staging:
      +materialized: view
      +tags: ["staging"]
    
    # Gold dimension models configuration
    gold_dimensions:
      +materialized: table
      +tags: ["gold", "dimension"]
      +post-hook: |
        {% if this.name != 'go_process_audit' %}
          INSERT INTO {{ ref('go_process_audit') }} (
            execution_id,
            process_name,
            pipeline_name,
            execution_start_time,
            execution_end_time,
            execution_status,
            records_processed,
            records_inserted,
            records_updated,
            records_failed,
            process_duration_seconds,
            error_message,
            start_time,
            end_time,
            status,
            load_date,
            update_date,
            source_system
          )
          VALUES (
            '{{ invocation_id }}',
            '{{ this.name }}',
            'zoom_gold_dimension_pipeline',
            '{{ run_started_at }}',
            CURRENT_TIMESTAMP,
            'SUCCESS',
            (SELECT COUNT(*) FROM {{ this }}),
            (SELECT COUNT(*) FROM {{ this }}),
            0,
            0,
            DATEDIFF(second, '{{ run_started_at }}', CURRENT_TIMESTAMP),
            NULL,
            '{{ run_started_at }}',
            CURRENT_TIMESTAMP,
            'COMPLETED',
            CURRENT_DATE,
            CURRENT_DATE,
            'DBT_GOLD_PIPELINE'
          )
        {% endif %}
      +pre-hook: |
        {% if this.name != 'go_process_audit' %}
          INSERT INTO {{ ref('go_process_audit') }} (
            execution_id,
            process_name,
            pipeline_name,
            execution_start_time,
            execution_end_time,
            execution_status,
            records_processed,
            records_inserted,
            records_updated,
            records_failed,
            process_duration_seconds,
            error_message,
            start_time,
            end_time,
            status,
            load_date,
            update_date,
            source_system
          )
          VALUES (
            '{{ invocation_id }}',
            '{{ this.name }}',
            'zoom_gold_dimension_pipeline',
            '{{ run_started_at }}',
            NULL,
            'RUNNING',
            0,
            0,
            0,
            0,
            0,
            NULL,
            '{{ run_started_at }}',
            NULL,
            'STARTED',
            CURRENT_DATE,
            CURRENT_DATE,
            'DBT_GOLD_PIPELINE'
          )
        {% endif %}

# Snapshot configurations
snapshots:
  zoom_gold_dimension_pipeline:
    +target_schema: gold
    +strategy: timestamp
    +updated_at: update_timestamp

# Seed configurations
seeds:
  zoom_gold_dimension_pipeline:
    +schema: gold

# Test configurations
tests:
  +store_failures: true
  +schema: gold_test_failures

# Documentation
docs:
  generate: true

# Variables
vars:
  # Source schema configuration
  silver_schema: 'silver'
  gold_schema: 'gold'
  
  # Date variables for incremental processing
  start_date: '2020-01-01'
  end_date: '2099-12-31'
  
  # Audit configuration
  enable_audit: true
  audit_schema: 'gold'
  
  # Error handling configuration
  enable_error_handling: true
  error_schema: 'gold'

# Dispatch configuration for cross-database compatibility
dispatch:
  - macro_namespace: dbt_utils
    search_order: ['zoom_gold_dimension_pipeline', 'dbt_utils']